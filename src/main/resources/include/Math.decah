class Math{
protected float MINVALUE = 1.4E-45f;
protected float MAXVALUE = 3.4028234663852886E38f;
protected float pi = 3.1415926536f;
protected float PiS2 = 1.5707963267949f;
 float _ulp(float x) {
    int ex = 0;
    float MAXVALUE = 3.4028234663852886E38f;
    float MINVALUE = 1.4E-45f;
	if(x<=0.0){
		x = -x;
	}
    if (x == 0.0 || x == -0.0){
				 return MINVALUE;}
    else {
    if (x == MAXVALUE|| x == MINVALUE) {
			return _pow(2,104);
        }
    else{if(x>1.0){
         ex = ex-1;
         while(x>=1.0){
             x = x/2;
             ex = ex + 1;
             }
    return _pow(2,ex-23);
    }
        else{
        while(x<1.0){
        x = x*2.0;
        ex = ex -1;
        }
        return _pow(2,ex-23);
        }
    }
      }


}


float _cosTaylor(float f){
    float res = 1;
    int i = 2;
    float j = i;
    float x = -_pow(f,2)/j;
    int k = 0;
    println(x);
    println(-_pow(0.0001,2)/2.0);
    while(k<1){
    k=k + 1;
    res = res + x;
    j=((i+1)*(i+2));
    x=x*-1*_pow(f,2)/j;
    i = i + 2;
    }
    return 1;
    }

float _pow(float x, int n){
  float ex = x;
  if (x == 0) {
        return 0;
        }
  if (n == 0){
        return 1;
        }
  else {if(n>0){
  while ( n>1) {
  x = x*ex ;
  n = n - 1;
  }
  return x ;
  }
  else{
  x = _pow(ex, -n) ;
  return 1/x ;
  }
  }
}
}
