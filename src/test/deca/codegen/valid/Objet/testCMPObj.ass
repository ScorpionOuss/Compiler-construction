; start main program
	TSTO #13
	BOV stack_overflow_error
	ADDSP #5
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.m, R0
	STORE R0, 5(GB)
; Main program
	ADDSP #4
	NEW #2, R2
	BOV tas_plein
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 6(GB)
	LOAD 6(GB), R2
	STORE R2, 7(GB)
	LOAD #null, R2
	STORE R2, 8(GB)
	NEW #2, R2
	BOV tas_plein
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 9(GB)
; Beginning of main instructions:
	ADDSP #2
	LOAD 6(GB), R2
	STORE R2, 0(SP)
	LOAD 7(GB), R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	BEQ dereferencement.null
	LOAD 0(R2), R2
	BSR 2(R2)
	LOAD R0, R2
	SUBSP #2
	LOAD 6(GB), R2
	CMP 7(GB), R2
	BNE E_Sinon.1
	WSTR "Oui!"
	WNL
	BRA E_Fin.1
E_Sinon.1:
E_Fin.1:
	LOAD 8(GB), R2
	LOAD #null, R3
	CMP R3, R2
	BNE E_Sinon.2
	WSTR "Oui!"
	WNL
	BRA E_Fin.2
E_Sinon.2:
E_Fin.2:
	LOAD 9(GB), R2
	LOAD #null, R3
	CMP R3, R2
	BEQ E_Sinon.3
	LOAD 9(GB), R2
	CMP 6(GB), R2
	BEQ E_Sinon.4
	WSTR "Oui!"
	WNL
	BRA E_Fin.4
E_Sinon.4:
E_Fin.4:
	BRA E_Fin.3
E_Sinon.3:
E_Fin.3:
	HALT
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
io_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
ArithFloat_Error:
	WSTR "Error: Débordement arithmétique sur flottants"
	WNL
	ERROR
ZeroDivision_Error:
	WSTR "Error: Division entière par 0"
	WNL
	ERROR
dereferencement.null:
	WSTR "Erreur : dereferencement de null"
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : heap_over_flow"
	WNL
	ERROR
init.A:
	TSTO #1
	BOV stack_overflow_error
	PUSH R2
	LOAD -2(LB), R1
	PUSH R1
	BSR init.Object
	SUBSP #1
	LOAD #1, R2
	LOAD -2(LB), R1
	STORE R2, 1(R1)
	POP R2
	RTS
code.A.m:
	TSTO #1
	BOV stack_overflow_error
	PUSH R2
	LOAD -2(LB), R2
	CMP -3(LB), R2
	BNE E_Sinon.5
	WSTR "Oui!"
	WNL
	BRA E_Fin.5
E_Sinon.5:
E_Fin.5:
end.A.m:
	POP R2
	RTS
code.Object.equals:
	LOAD -2(LB), R2
	LOAD -3(LB), R0
	CMP R0, R2
	BEQ end.Success.objet
	LOAD #0, R0
	RTS
end.Success.objet:
	LOAD #1, R0
	RTS
init.object:
	RTS
debut.io:
	LOAD -3(LB), R2
	LOAD -2(LB), R0
	LOAD 0(R0), R0
	CMP R0, R2
	BNE sinon.io.1
	LOAD #1, R2
	RTS
sinon.io.1:
	LOAD 0(R0), R1
	CMP #null, R1
	BNE sinon.io.2
	LOAD #0, R2
	RTS
sinon.io.2:
	LOAD -3(LB), R2
	LEA 0(R0), R0
	ADDSP #2
	STORE R0, 0(SP)
	STORE R2, -1(SP)
	BSR debut.io
	SUBSP #2
	RTS
	ERROR
; end main program
