; start main program
	TSTO #1
	BOV stack_overflow_error
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LEA 3(GB), R0
	STORE R0, 7(GB)
; Main program
	ADDSP #1
	NEW #4, R2
	BOV tas_plein
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.A
	POP R2
	STORE R2, 1(LB)
; Beginning of main instructions:
	HALT
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
io_error:
	WSTR "Error: Input/Output error"
	WNL
	ERROR
ArithFloat_Error:
	WSTR "Error: Débordement arithmétique sur flottants"
	WNL
	ERROR
ZeroDivision_Error:
	WSTR "Error: Division entière par 0"
	WNL
	ERROR
dereferencement.null:
	WSTR "Erreur : dereferencement de null"
	WNL
	ERROR
tas_plein:
	WSTR "Erreur : heap_over_flow"
	WNL
	ERROR
init.A:
	TSTO #1
	BOV stack_overflow_error
	PUSH R2
	LOAD -2(LB), R1
	PUSH R1
	BSR init.Object
	SUBSP #1
	LOAD #1, R2
	LOAD -2(LB), R1
	STORE R2, 1(R1)
	LOAD #0, R2
	ADD #2, R2
	MUL #3, R2
	LOAD -2(LB), R1
	STORE R2, 2(R1)
	LOAD #1, R2
	LOAD -2(LB), R1
	STORE R2, 3(R1)
	POP R2
	RTS
code.A.m:
	TSTO #0
	BOV stack_overflow_error
	RTS
code.A.p:
	TSTO #0
	BOV stack_overflow_error
	RTS
init.B:
	TSTO #1
	BOV stack_overflow_error
	PUSH R2
	LOAD -2(LB), R1
	PUSH R1
	BSR init.A
	SUBSP #1
	LOAD #3, R2
	LOAD -2(LB), R1
	STORE R2, 1(R1)
	POP R2
	RTS
code.B.p:
	TSTO #0
	BOV stack_overflow_error
	RTS
code.B.q:
	TSTO #0
	BOV stack_overflow_error
	RTS
code.Object.equals:
; end main program
